[pytest]
# ===============================================================================
# PLATFORM SERVICE PYTEST CONFIGURATION - POST REDIS REMOVAL âœ…
# ===============================================================================
# Django automatically creates test_<database_name> for all tests
# Full database access, database cache (no Redis), all Django features enabled

DJANGO_SETTINGS_MODULE = config.settings.dev
python_files = test_*.py *_test.py *_tests.py
python_classes = Test*
python_functions = test_*

# Set Python path for clean imports
pythonpath = .

# Add options - updated for services architecture
addopts = 
    --verbose
    --tb=short  
    --strict-markers
    --disable-warnings
    --nomigrations
    --reuse-db
    --cov=apps
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html

# Test paths - platform app tests only
testpaths = tests

# Custom markers - updated for services architecture
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    unit: marks tests as unit tests (single component)
    integration: marks tests as integration tests (multiple components)  
    security: marks security-related tests
    cache: marks tests that verify database cache functionality (no Redis)
    db: marks tests that require database access
    romanian_compliance: marks tests for Romanian regulations
    virtualmin: marks tests requiring Virtualmin API
    billing: marks billing-related tests
    django_db: marks tests requiring database access (auto-added by pytest-django)

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::django.utils.deprecation.RemovedInDjango50Warning
    ignore::django.utils.deprecation.RemovedInDjango51Warning

# Django specific - automatic test database creation enabled
django_find_project = false