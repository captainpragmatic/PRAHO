# Generated by Django 5.0.14 on 2025-08-19 13:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SupportCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Category Name"),
                ),
                ("name_en", models.CharField(max_length=100, verbose_name="Name (EN)")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "icon",
                    models.CharField(
                        default="help-circle", max_length=50, verbose_name="Icon"
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#3B82F6", max_length=7, verbose_name="Color"
                    ),
                ),
                (
                    "sla_response_hours",
                    models.PositiveIntegerField(
                        default=24, verbose_name="SLA Response (hours)"
                    ),
                ),
                (
                    "sla_resolution_hours",
                    models.PositiveIntegerField(
                        default=72, verbose_name="SLA Resolution (hours)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "sort_order",
                    models.PositiveIntegerField(default=0, verbose_name="Sort Order"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Support Category",
                "verbose_name_plural": "Support Categories",
                "db_table": "support_categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ticket_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Ticket Number"
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "contact_person",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Contact Person"
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(max_length=254, verbose_name="Contact Email"),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Contact Phone"
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                            ("critical", "Critical"),
                        ],
                        default="normal",
                        max_length=20,
                        verbose_name="Priority",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("open", "Open"),
                            ("pending", "Pending"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("web", "Website"),
                            ("email", "Email"),
                            ("phone", "Phone"),
                            ("chat", "Chat"),
                            ("api", "API"),
                            ("internal", "Internal"),
                        ],
                        default="web",
                        max_length=20,
                        verbose_name="Source",
                    ),
                ),
                (
                    "assigned_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Assigned At"
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("sla_response_due", models.DateTimeField(blank=True, null=True)),
                ("sla_resolution_due", models.DateTimeField(blank=True, null=True)),
                ("first_response_at", models.DateTimeField(blank=True, null=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "estimated_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Estimated Hours",
                    ),
                ),
                (
                    "actual_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="Actual Hours",
                    ),
                ),
                (
                    "satisfaction_rating",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Satisfaction Rating (1-5)"
                    ),
                ),
                (
                    "satisfaction_comment",
                    models.TextField(blank=True, verbose_name="Satisfaction Comment"),
                ),
                (
                    "is_escalated",
                    models.BooleanField(default=False, verbose_name="Escalated"),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=True, verbose_name="Public for Customer"
                    ),
                ),
                (
                    "requires_customer_response",
                    models.BooleanField(
                        default=False, verbose_name="Requires Customer Response"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Support Ticket",
                "verbose_name_plural": "Support Tickets",
                "db_table": "tickets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TicketAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="tickets/attachments/", verbose_name="File"
                    ),
                ),
                ("filename", models.CharField(max_length=255, verbose_name="Filename")),
                ("file_size", models.PositiveIntegerField(verbose_name="File Size")),
                (
                    "content_type",
                    models.CharField(max_length=100, verbose_name="Content Type"),
                ),
                ("is_safe", models.BooleanField(default=True, verbose_name="Safe")),
                ("virus_scan_result", models.CharField(blank=True, max_length=50)),
                (
                    "uploaded_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Uploaded At"),
                ),
            ],
            options={
                "verbose_name": "Ticket Attachment",
                "verbose_name_plural": "Ticket Attachments",
                "db_table": "ticket_attachments",
                "ordering": ["uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="TicketComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Content")),
                (
                    "comment_type",
                    models.CharField(
                        choices=[
                            ("customer", "Customer"),
                            ("support", "Support"),
                            ("internal", "Internal"),
                            ("system", "System"),
                        ],
                        default="support",
                        max_length=20,
                        verbose_name="Comment Type",
                    ),
                ),
                (
                    "author_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Author Name"
                    ),
                ),
                (
                    "author_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Author Email"
                    ),
                ),
                ("is_public", models.BooleanField(default=True, verbose_name="Public")),
                (
                    "is_solution",
                    models.BooleanField(default=False, verbose_name="Is Solution"),
                ),
                (
                    "time_spent",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="Time Spent (hours)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Ticket Comment",
                "verbose_name_plural": "Ticket Comments",
                "db_table": "ticket_comments",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="TicketWorklog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(verbose_name="Activity Description")),
                (
                    "time_spent",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        verbose_name="Time Spent (hours)",
                    ),
                ),
                (
                    "is_billable",
                    models.BooleanField(default=False, verbose_name="Billable"),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Hourly Rate",
                    ),
                ),
                ("work_date", models.DateField(verbose_name="Work Date")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Ticket Worklog",
                "verbose_name_plural": "Ticket Worklogs",
                "db_table": "ticket_worklogs",
                "ordering": ["-work_date"],
            },
        ),
    ]
