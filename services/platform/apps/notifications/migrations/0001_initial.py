# Generated by Django 5.0.14 on 2025-08-19 18:18

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("customers", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        help_text="Template identifier (e.g., 'invoice_issued', 'payment_reminder')",
                        max_length=100,
                    ),
                ),
                (
                    "locale",
                    models.CharField(
                        default="ro",
                        help_text="Language/locale code (ro, en)",
                        max_length=10,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        help_text="Email subject line (supports variables)",
                        max_length=255,
                    ),
                ),
                (
                    "body_html",
                    models.TextField(
                        help_text="HTML email body (supports Django template syntax)"
                    ),
                ),
                (
                    "body_text",
                    models.TextField(
                        blank=True,
                        help_text="Plain text fallback (auto-generated if empty)",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Description of when this template is used",
                    ),
                ),
                (
                    "variables",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Available template variables and their descriptions",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this template is available for use",
                    ),
                ),
                (
                    "version",
                    models.PositiveIntegerField(
                        default=1, help_text="Template version for change tracking"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("billing", "Billing & Invoices"),
                            ("dunning", "Payment Reminders"),
                            ("provisioning", "Service Provisioning"),
                            ("support", "Support & Tickets"),
                            ("welcome", "Welcome & Onboarding"),
                            ("renewal", "Service Renewals"),
                            ("suspension", "Service Suspension"),
                            ("termination", "Service Termination"),
                            ("domain", "Domain Management"),
                            ("security", "Security Alerts"),
                            ("maintenance", "Maintenance Notifications"),
                            ("marketing", "Marketing & Promotions"),
                            ("compliance", "Legal & Compliance"),
                            ("system", "System Notifications"),
                        ],
                        default="system",
                        help_text="Template category for organization",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this template",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_email_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Template",
                "verbose_name_plural": "Email Templates",
                "db_table": "email_template",
                "ordering": ["category", "key", "locale"],
            },
        ),
        migrations.CreateModel(
            name="EmailCampaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Campaign name for identification", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Campaign description and purpose"
                    ),
                ),
                (
                    "audience",
                    models.CharField(
                        choices=[
                            ("all_customers", "All Customers"),
                            ("active_customers", "Active Customers"),
                            ("inactive_customers", "Inactive Customers"),
                            ("overdue_payments", "Overdue Payments"),
                            ("trial_expiring", "Trial Expiring"),
                            ("custom_filter", "Custom Filter"),
                        ],
                        default="active_customers",
                        help_text="Target audience for this campaign",
                        max_length=20,
                    ),
                ),
                (
                    "audience_filter",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Custom filter criteria for audience selection",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("scheduled", "Scheduled"),
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("paused", "Paused"),
                            ("cancelled", "Cancelled"),
                            ("failed", "Failed"),
                        ],
                        default="draft",
                        help_text="Current campaign status",
                        max_length=20,
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When to send this campaign (leave blank for immediate)",
                        null=True,
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When campaign sending actually started",
                        null=True,
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When campaign sending completed",
                        null=True,
                    ),
                ),
                (
                    "total_recipients",
                    models.PositiveIntegerField(
                        default=0, help_text="Total number of recipients"
                    ),
                ),
                (
                    "emails_sent",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of emails successfully sent"
                    ),
                ),
                (
                    "emails_failed",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of emails that failed to send"
                    ),
                ),
                (
                    "is_transactional",
                    models.BooleanField(
                        default=False,
                        help_text="Transactional emails (billing, service) vs. marketing",
                    ),
                ),
                (
                    "requires_consent",
                    models.BooleanField(
                        default=True,
                        help_text="Requires explicit customer consent (GDPR compliance)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this campaign",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_campaigns",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        help_text="Email template to use for this campaign",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="notifications.emailtemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Campaign",
                "verbose_name_plural": "Email Campaigns",
                "db_table": "email_campaign",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "to_addr",
                    models.EmailField(
                        help_text="Recipient email address",
                        max_length=254,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                (
                    "from_addr",
                    models.EmailField(
                        blank=True,
                        help_text="Sender email address (if different from default)",
                        max_length=254,
                    ),
                ),
                (
                    "reply_to",
                    models.EmailField(
                        blank=True, help_text="Reply-to email address", max_length=254
                    ),
                ),
                (
                    "template_key",
                    models.CharField(
                        blank=True,
                        help_text="Template used to generate this email",
                        max_length=100,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        help_text="Actual email subject sent", max_length=255
                    ),
                ),
                (
                    "body_text",
                    models.TextField(
                        blank=True, help_text="Plain text version of email body"
                    ),
                ),
                (
                    "body_html",
                    models.TextField(
                        blank=True, help_text="HTML version of email body"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "Queued"),
                            ("sending", "Sending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("bounced", "Bounced"),
                            ("soft_bounced", "Soft Bounced"),
                            ("complained", "Complained"),
                            ("failed", "Failed"),
                            ("rejected", "Rejected"),
                        ],
                        default="queued",
                        help_text="Current delivery status",
                        max_length=20,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        default="smtp",
                        help_text="Email service provider (smtp, sendgrid, mailgun, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "provider_id",
                    models.CharField(
                        blank=True,
                        help_text="Provider's unique message ID",
                        max_length=255,
                    ),
                ),
                (
                    "provider_response",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Raw provider response for debugging",
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When email was queued/sent"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When email was confirmed delivered",
                        null=True,
                    ),
                ),
                (
                    "opened_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When email was first opened (if tracking enabled)",
                        null=True,
                    ),
                ),
                (
                    "clicked_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When email links were first clicked",
                        null=True,
                    ),
                ),
                (
                    "meta",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional email metadata (variables used, campaign info, etc.)",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        help_text="Email priority level",
                        max_length=10,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        help_text="Customer this email was sent to (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="email_logs",
                        to="customers.customer",
                    ),
                ),
                (
                    "sent_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who triggered this email (if manual)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_emails",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Log",
                "verbose_name_plural": "Email Logs",
                "db_table": "email_log",
                "ordering": ["-sent_at"],
                "indexes": [
                    models.Index(
                        fields=["to_addr", "-sent_at"],
                        name="email_log_to_addr_9eaa4c_idx",
                    ),
                    models.Index(
                        fields=["customer", "-sent_at"],
                        name="email_log_custome_8deb83_idx",
                    ),
                    models.Index(
                        fields=["template_key", "-sent_at"],
                        name="email_log_templat_61c477_idx",
                    ),
                    models.Index(
                        fields=["status", "-sent_at"],
                        name="email_log_status_f8e839_idx",
                    ),
                    models.Index(
                        fields=["provider", "-sent_at"],
                        name="email_log_provide_8afd8a_idx",
                    ),
                    models.Index(
                        fields=["-sent_at"], name="email_log_sent_at_3d6302_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="emailtemplate",
            index=models.Index(
                fields=["key", "locale"], name="email_templ_key_460ddb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailtemplate",
            index=models.Index(
                fields=["category", "is_active"], name="email_templ_categor_f080c1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailtemplate",
            index=models.Index(
                fields=["created_at"], name="email_templ_created_ca9757_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="emailtemplate",
            unique_together={("key", "locale")},
        ),
        migrations.AddIndex(
            model_name="emailcampaign",
            index=models.Index(
                fields=["status", "-created_at"], name="email_campa_status_043842_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailcampaign",
            index=models.Index(
                fields=["scheduled_at"], name="email_campa_schedul_35c73d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailcampaign",
            index=models.Index(
                fields=["-created_at"], name="email_campa_created_922a27_idx"
            ),
        ),
    ]
