# Generated by Django 5.0.14 on 2025-08-19 18:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("customers", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="WebhookEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("stripe", "üí≥ Stripe"),
                            ("paypal", "üü° PayPal"),
                            ("virtualmin", "üñ•Ô∏è Virtualmin"),
                            ("cpanel", "üåê cPanel"),
                            ("registrar_namecheap", "üè∑Ô∏è Namecheap"),
                            ("registrar_godaddy", "üè∑Ô∏è GoDaddy"),
                            ("bank_bt", "üè¶ Banca Transilvania"),
                            ("bank_bcr", "üè¶ BCR"),
                            ("efactura", "üá∑üá¥ e-Factura"),
                            ("other", "üîå Other"),
                        ],
                        help_text="External service that sent the webhook",
                        max_length=50,
                    ),
                ),
                (
                    "event_id",
                    models.CharField(
                        help_text="Unique event ID from the external service",
                        max_length=255,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        help_text="Type of event (e.g., 'payment.succeeded', 'domain.created')",
                        max_length=100,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "‚è≥ Pending"),
                            ("processed", "‚úÖ Processed"),
                            ("failed", "‚ùå Failed"),
                            ("skipped", "‚è≠Ô∏è Skipped"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "received_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="When webhook was received by our system",
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When webhook processing completed",
                        null=True,
                    ),
                ),
                (
                    "payload",
                    models.JSONField(
                        help_text="Complete webhook payload from external service"
                    ),
                ),
                (
                    "signature",
                    models.TextField(
                        blank=True,
                        help_text="Webhook signature for verification (e.g., Stripe signature)",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error details if processing failed"
                    ),
                ),
                (
                    "retry_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of processing attempts",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "next_retry_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When to retry processing (for failed webhooks)",
                        null=True,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        help_text="IP address webhook was received from",
                        null=True,
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True, help_text="User agent of webhook sender"
                    ),
                ),
                (
                    "headers",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="HTTP headers from webhook request",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "üîÑ Webhook Event",
                "verbose_name_plural": "üîÑ Webhook Events",
                "ordering": ["-received_at"],
                "indexes": [
                    models.Index(
                        condition=models.Q(("status", "pending")),
                        fields=["status", "received_at"],
                        name="webhook_pending_idx",
                    ),
                    models.Index(
                        condition=models.Q(
                            ("next_retry_at__isnull", False), ("status", "failed")
                        ),
                        fields=["status", "next_retry_at"],
                        name="webhook_retry_idx",
                    ),
                    models.Index(
                        fields=["source", "event_type", "received_at"],
                        name="webhook_source_type_idx",
                    ),
                ],
                "unique_together": {("source", "event_id")},
            },
        ),
        migrations.CreateModel(
            name="WebhookDelivery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "endpoint_url",
                    models.URLField(help_text="Customer's webhook endpoint URL"),
                ),
                (
                    "event_type",
                    models.CharField(
                        help_text="Type of event being delivered", max_length=100
                    ),
                ),
                (
                    "payload",
                    models.JSONField(help_text="Webhook payload sent to customer"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "‚è≥ Pending"),
                            ("delivered", "‚úÖ Delivered"),
                            ("failed", "‚ùå Failed"),
                            ("disabled", "üö´ Disabled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "http_status",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="HTTP response status from customer endpoint",
                        null=True,
                    ),
                ),
                (
                    "response_body",
                    models.TextField(
                        blank=True, help_text="Response body from customer endpoint"
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("next_retry_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhook_deliveries",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "üì§ Webhook Delivery",
                "verbose_name_plural": "üì§ Webhook Deliveries",
                "ordering": ["-scheduled_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "scheduled_at"], name="delivery_pending_idx"
                    ),
                    models.Index(
                        fields=["customer", "event_type", "scheduled_at"],
                        name="delivery_customer_idx",
                    ),
                ],
            },
        ),
    ]
