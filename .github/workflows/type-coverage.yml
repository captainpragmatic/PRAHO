name: Type Coverage Check

on:
  push:
    branches: [ master, develop, 'feat/*', 'fix/*' ]
  pull_request:
    branches: [ master, develop ]

jobs:
  type-check:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/dev.txt
    
    - name: Set up Django settings
      run: |
        export DJANGO_SETTINGS_MODULE=config.settings.test
        export DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db
        export REDIS_URL=redis://localhost:6379/0
    
    - name: Run type coverage check
      run: |
        python scripts/type_coverage_report.py
    
    - name: Run mypy type checking
      run: |
        python -m mypy apps/ --config-file pyproject.toml --no-error-summary > mypy_errors.txt || true
    
    - name: Count type errors
      run: |
        ERROR_COUNT=$(cat mypy_errors.txt | grep -c "error:" || echo "0")
        echo "Type errors: $ERROR_COUNT"
        echo "ERROR_COUNT=$ERROR_COUNT" >> $GITHUB_ENV
    
    - name: Check type error threshold
      run: |
        if [ "$ERROR_COUNT" -gt 50 ]; then
          echo "❌ Type errors ($ERROR_COUNT) exceed threshold (50)"
          exit 1
        else
          echo "✅ Type errors ($ERROR_COUNT) within threshold (50)"
        fi
    
    - name: Upload type coverage report
      uses: actions/upload-artifact@v3
      with:
        name: type-coverage-report
        path: type_coverage_report.json
    
    - name: Comment PR with type coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = JSON.parse(fs.readFileSync('type_coverage_report.json', 'utf8'));
          
          const summary = `## 📊 Type Coverage Report
          
          **Total Type Errors**: ${report.overall_summary.total_type_errors}
          **Target**: ${report.overall_summary.target_errors} errors
          **Status**: ${report.overall_summary.phase_3_status}
          
          ### 🎯 App Breakdown
          ${report.app_breakdown.map(app => 
            `| ${app.app} | ${app.total_files} files | ${app.error_count} errors | ${app.type_coverage?.toFixed(1) || 'N/A'}% |
          ).join('\n')}
          
          ### 🚀 Recommendations
          ${report.recommendations.map(rec => `- ${rec}`).join('\n')}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: summary
          });