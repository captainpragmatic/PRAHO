# Generated by Django 5.2.5 on 2025-09-02 11:51

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('provisioning', '0004_alter_provisioningtask_options_alter_server_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='VirtualminServer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Server Name')),
                ('hostname', models.CharField(max_length=255, unique=True, verbose_name='Hostname')),
                ('api_port', models.PositiveIntegerField(default=10000, verbose_name='API Port')),
                ('api_path', models.CharField(default='/virtual-server/remote.cgi', max_length=100, verbose_name='API Path')),
                ('use_ssl', models.BooleanField(default=True, verbose_name='Use SSL')),
                ('ssl_verify', models.BooleanField(default=True, verbose_name='Verify SSL Certificate')),
                ('ssl_cert_fingerprint', models.CharField(blank=True, max_length=128, verbose_name='SSL Certificate Fingerprint')),
                ('api_username', models.CharField(max_length=100, verbose_name='API Username')),
                ('encrypted_api_password', models.BinaryField(verbose_name='Encrypted API Password')),
                ('max_domains', models.PositiveIntegerField(default=1000, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Maximum Domains')),
                ('max_disk_gb', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum Disk Space (GB)')),
                ('max_bandwidth_gb', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum Bandwidth (GB/month)')),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Maintenance'), ('disabled', 'Disabled'), ('failed', 'Failed')], default='active', max_length=20, verbose_name='Status')),
                ('last_health_check', models.DateTimeField(blank=True, null=True)),
                ('health_check_error', models.TextField(blank=True)),
                ('weight', models.PositiveIntegerField(default=100, help_text='Server weight for load balancing (higher = more capacity)')),
                ('region', models.CharField(blank=True, help_text='Geographic region for placement decisions', max_length=50)),
                ('tags', models.JSONField(default=list, help_text='Server tags for placement policies')),
                ('current_domains', models.PositiveIntegerField(default=0)),
                ('current_disk_usage_gb', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('current_bandwidth_usage_gb', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Virtualmin Server',
                'verbose_name_plural': 'Virtualmin Servers',
                'db_table': 'virtualmin_servers',
                'ordering': ('name',),
            },
        ),
        migrations.AlterField(
            model_name='server',
            name='management_api_key',
            field=models.TextField(blank=True, default='', verbose_name='Encrypted API Key'),
        ),
        migrations.AlterField(
            model_name='server',
            name='management_api_secret',
            field=models.TextField(blank=True, default='', verbose_name='Encrypted API Secret'),
        ),
        migrations.AlterField(
            model_name='server',
            name='management_webhook_secret',
            field=models.CharField(blank=True, default='', max_length=255, verbose_name='Webhook Secret for signature verification'),
        ),
        migrations.CreateModel(
            name='VirtualminAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Primary Domain')),
                ('virtualmin_username', models.CharField(max_length=32, verbose_name='Virtualmin Username')),
                ('encrypted_password', models.BinaryField(verbose_name='Encrypted Password')),
                ('template_name', models.CharField(default='Default', max_length=50, verbose_name='Virtualmin Template')),
                ('disk_quota_mb', models.PositiveIntegerField(blank=True, null=True, verbose_name='Disk Quota (MB)')),
                ('bandwidth_quota_mb', models.PositiveIntegerField(blank=True, null=True, verbose_name='Bandwidth Quota (MB)')),
                ('status', models.CharField(choices=[('provisioning', 'Provisioning'), ('active', 'Active'), ('suspended', 'Suspended'), ('terminated', 'Terminated'), ('error', 'Error')], default='provisioning', max_length=20, verbose_name='Status')),
                ('status_message', models.TextField(blank=True)),
                ('praho_customer_id', models.PositiveIntegerField(blank=True, help_text='Stored in Virtualmin comment for recovery', null=True)),
                ('praho_service_id', models.UUIDField(blank=True, help_text='Stored in Virtualmin comment for recovery', null=True)),
                ('features', models.JSONField(default=dict, help_text='Virtualmin features enabled for this account')),
                ('current_disk_usage_mb', models.PositiveIntegerField(default=0)),
                ('current_bandwidth_usage_mb', models.PositiveIntegerField(default=0)),
                ('provisioned_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='virtualmin_account', to='provisioning.service', verbose_name='PRAHO Service')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='provisioning.virtualminserver', verbose_name='Virtualmin Server')),
            ],
            options={
                'verbose_name': 'Virtualmin Account',
                'verbose_name_plural': 'Virtualmin Accounts',
                'db_table': 'virtualmin_accounts',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='VirtualminProvisioningJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('correlation_id', models.CharField(db_index=True, help_text='Correlation ID for tracking across systems', max_length=100)),
                ('operation', models.CharField(choices=[('create_domain', 'Create Domain'), ('delete_domain', 'Delete Domain'), ('modify_domain', 'Modify Domain'), ('suspend_domain', 'Suspend Domain'), ('unsuspend_domain', 'Unsuspend Domain'), ('create_user', 'Create User'), ('delete_user', 'Delete User'), ('create_database', 'Create Database'), ('delete_database', 'Delete Database'), ('install_ssl', 'Install SSL Certificate'), ('backup_domain', 'Backup Domain'), ('restore_domain', 'Restore Domain')], max_length=30)),
                ('parameters', models.JSONField(default=dict)),
                ('result', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('status_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_time_seconds', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('celery_task_id', models.CharField(blank=True, db_index=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provisioning_jobs', to='provisioning.virtualminaccount')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provisioning_jobs', to='provisioning.virtualminserver')),
            ],
            options={
                'verbose_name': 'Virtualmin Provisioning Job',
                'verbose_name_plural': 'Virtualmin Provisioning Jobs',
                'db_table': 'virtualmin_provisioning_jobs',
                'ordering': ('-created_at',),
                'indexes': [models.Index(fields=['status'], name='virtualmin__status_0a5a7e_idx'), models.Index(fields=['operation'], name='virtualmin__operati_3113db_idx'), models.Index(fields=['server', 'status'], name='virtualmin__server__662f76_idx'), models.Index(fields=['correlation_id'], name='virtualmin__correla_f4fed1_idx'), models.Index(fields=['celery_task_id'], name='virtualmin__celery__e82166_idx')],
            },
        ),
        migrations.CreateModel(
            name='VirtualminDriftRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(db_index=True, max_length=255)),
                ('drift_type', models.CharField(choices=[('missing_in_virtualmin', 'Missing in Virtualmin'), ('missing_in_praho', 'Missing in PRAHO'), ('status_mismatch', 'Status Mismatch'), ('quota_mismatch', 'Quota Mismatch'), ('feature_mismatch', 'Feature Mismatch'), ('metadata_mismatch', 'Metadata Mismatch')], max_length=30)),
                ('description', models.TextField()),
                ('praho_state', models.JSONField(default=dict)),
                ('virtualmin_state', models.JSONField(default=dict)),
                ('resolution_status', models.CharField(choices=[('pending', 'Pending'), ('auto_fixed', 'Auto Fixed'), ('manual_fixed', 'Manual Fixed'), ('ignored', 'Ignored')], default='pending', max_length=20)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_by', models.CharField(blank=True, max_length=100)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='provisioning.virtualminserver')),
            ],
            options={
                'verbose_name': 'Virtualmin Drift Record',
                'verbose_name_plural': 'Virtualmin Drift Records',
                'db_table': 'virtualmin_drift_records',
                'ordering': ('-detected_at',),
                'indexes': [models.Index(fields=['domain'], name='virtualmin__domain_3a8233_idx'), models.Index(fields=['drift_type'], name='virtualmin__drift_t_9d7201_idx'), models.Index(fields=['resolution_status'], name='virtualmin__resolut_651319_idx'), models.Index(fields=['server', 'resolution_status'], name='virtualmin__server__590da3_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='virtualminaccount',
            index=models.Index(fields=['domain'], name='virtualmin__domain_5fbde3_idx'),
        ),
        migrations.AddIndex(
            model_name='virtualminaccount',
            index=models.Index(fields=['status'], name='virtualmin__status_300042_idx'),
        ),
        migrations.AddIndex(
            model_name='virtualminaccount',
            index=models.Index(fields=['server', 'status'], name='virtualmin__server__264233_idx'),
        ),
    ]
