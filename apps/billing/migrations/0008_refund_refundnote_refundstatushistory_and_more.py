# Generated by Django 5.2.5 on 2025-09-03 10:18

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('billing', '0007_proformainvoice_notes'),
        ('customers', '0003_rename_payment_method_field'),
        ('orders', '0004_alter_order_options_alter_orderitem_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('approved', 'Approved'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('refund_type', models.CharField(choices=[('full', 'Full Refund'), ('partial', 'Partial Refund')], default='full', max_length=20)),
                ('reason', models.CharField(choices=[('customer_request', 'Customer Request'), ('error_correction', 'Error Correction'), ('dispute', 'Dispute'), ('service_failure', 'Service Failure'), ('duplicate_payment', 'Duplicate Payment'), ('fraud', 'Fraud'), ('cancellation', 'Cancellation'), ('downgrade', 'Downgrade'), ('administrative', 'Administrative')], default='customer_request', max_length=50)),
                ('amount_cents', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('original_amount_cents', models.BigIntegerField(help_text='Original transaction amount for reference')),
                ('gateway_refund_id', models.CharField(blank=True, help_text='Payment gateway refund ID', max_length=255)),
                ('reference_number', models.CharField(help_text='Unique refund reference number', max_length=100, unique=True)),
                ('reason_description', models.TextField(blank=True, help_text='Detailed reason for refund')),
                ('internal_notes', models.TextField(blank=True, help_text='Internal notes not visible to customer')),
                ('processed_at', models.DateTimeField(blank=True, help_text='When refund was actually processed', null=True)),
                ('gateway_processed_at', models.DateTimeField(blank=True, help_text='When gateway confirmed processing', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional refund metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_refunds', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_refunds', to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='billing.currency')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='refunds', to='customers.customer')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='refunds', to='billing.invoice')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='refunds', to='orders.order')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refunds', to='billing.payment')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_refunds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Refund',
                'verbose_name_plural': 'Refunds',
                'db_table': 'refunds',
            },
        ),
        migrations.CreateModel(
            name='RefundNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note_type', models.CharField(choices=[('internal', 'Internal Note'), ('customer', 'Customer Communication'), ('gateway', 'Gateway Response'), ('system', 'System Generated')], default='internal', max_length=20)),
                ('title', models.CharField(blank=True, help_text='Optional note title', max_length=200)),
                ('content', models.TextField(help_text='Note content')),
                ('is_customer_visible', models.BooleanField(default=False, help_text='Whether customer can see this note')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional note metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refund_notes', to=settings.AUTH_USER_MODEL)),
                ('refund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='billing.refund')),
            ],
            options={
                'verbose_name': 'Refund Note',
                'verbose_name_plural': 'Refund Notes',
                'db_table': 'refund_notes',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='RefundStatusHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('previous_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('processing', 'Processing'), ('approved', 'Approved'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], max_length=20, null=True)),
                ('new_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('approved', 'Approved'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], max_length=20)),
                ('change_reason', models.TextField(blank=True, help_text='Reason for status change')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional status change metadata')),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refund_status_changes', to=settings.AUTH_USER_MODEL)),
                ('refund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='billing.refund')),
            ],
            options={
                'verbose_name': 'Refund Status History',
                'verbose_name_plural': 'Refund Status Histories',
                'db_table': 'refund_status_history',
                'ordering': ('-changed_at',),
            },
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['customer', '-created_at'], name='refunds_custome_2ca0e4_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['status', '-created_at'], name='refunds_status_318f0e_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['refund_type'], name='refunds_refund__c154fb_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['reason'], name='refunds_reason_824f43_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['gateway_refund_id'], name='refunds_gateway_6faa77_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['reference_number'], name='refunds_referen_76e208_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['order'], name='refunds_order_i_20e1f6_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['invoice'], name='refunds_invoice_c06d20_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['payment'], name='refunds_payment_0cace6_idx'),
        ),
        migrations.AddConstraint(
            model_name='refund',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('order__isnull', False), ('invoice__isnull', True)), models.Q(('order__isnull', True), ('invoice__isnull', False)), _connector='OR'), name='refund_order_or_invoice_not_both'),
        ),
        migrations.AddConstraint(
            model_name='refund',
            constraint=models.CheckConstraint(condition=models.Q(('amount_cents__gt', 0)), name='refund_amount_positive'),
        ),
        migrations.AddIndex(
            model_name='refundnote',
            index=models.Index(fields=['refund', '-created_at'], name='refund_note_refund__685e9e_idx'),
        ),
        migrations.AddIndex(
            model_name='refundnote',
            index=models.Index(fields=['note_type', '-created_at'], name='refund_note_note_ty_63b7ed_idx'),
        ),
        migrations.AddIndex(
            model_name='refundnote',
            index=models.Index(fields=['is_customer_visible', '-created_at'], name='refund_note_is_cust_f248bb_idx'),
        ),
        migrations.AddIndex(
            model_name='refundstatushistory',
            index=models.Index(fields=['refund', '-changed_at'], name='refund_stat_refund__ec528e_idx'),
        ),
        migrations.AddIndex(
            model_name='refundstatushistory',
            index=models.Index(fields=['new_status', '-changed_at'], name='refund_stat_new_sta_add141_idx'),
        ),
    ]
