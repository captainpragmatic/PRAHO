# Generated by Django 5.0.14 on 2025-08-19 14:23

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("customers", "0002_initial"),
        ("provisioning", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "code",
                    models.CharField(max_length=3, primary_key=True, serialize=False),
                ),
                ("symbol", models.CharField(max_length=10)),
                ("decimals", models.SmallIntegerField(default=2)),
            ],
            options={
                "verbose_name": "Currency",
                "verbose_name_plural": "Currencies",
                "db_table": "currency",
            },
        ),
        migrations.CreateModel(
            name="InvoiceSequence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "scope",
                    models.CharField(default="default", max_length=50, unique=True),
                ),
                ("last_value", models.BigIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Invoice Sequence",
                "verbose_name_plural": "Invoice Sequences",
                "db_table": "invoice_sequence",
            },
        ),
        migrations.CreateModel(
            name="ProformaSequence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "scope",
                    models.CharField(default="default", max_length=50, unique=True),
                ),
                ("last_value", models.BigIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Proforma Sequence",
                "verbose_name_plural": "Proforma Sequences",
                "db_table": "proforma_sequence",
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(default="TMP-000", max_length=50, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("issued", "Issued"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("void", "Void"),
                            ("refunded", "Refunded"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "exchange_to_ron",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Exchange rate to RON at time of invoice",
                        max_digits=18,
                        null=True,
                    ),
                ),
                ("subtotal_cents", models.BigIntegerField(default=0)),
                ("tax_cents", models.BigIntegerField(default=0)),
                ("total_cents", models.BigIntegerField(default=0)),
                ("issued_at", models.DateTimeField(blank=True, null=True)),
                (
                    "locked_at",
                    models.DateTimeField(
                        blank=True, help_text="When invoice became immutable", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("due_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                ("meta", models.JSONField(blank=True, default=dict)),
                ("bill_to_name", models.CharField(default="", max_length=255)),
                ("bill_to_tax_id", models.CharField(blank=True, max_length=50)),
                ("bill_to_email", models.EmailField(blank=True, max_length=254)),
                ("bill_to_address1", models.CharField(blank=True, max_length=255)),
                ("bill_to_address2", models.CharField(blank=True, max_length=255)),
                ("bill_to_city", models.CharField(blank=True, max_length=100)),
                ("bill_to_region", models.CharField(blank=True, max_length=100)),
                ("bill_to_postal", models.CharField(blank=True, max_length=20)),
                ("bill_to_country", models.CharField(blank=True, max_length=2)),
                ("efactura_id", models.CharField(blank=True, max_length=100)),
                ("efactura_sent", models.BooleanField(default=False)),
                ("efactura_sent_date", models.DateTimeField(blank=True, null=True)),
                ("efactura_response", models.JSONField(blank=True, default=dict)),
                (
                    "pdf_file",
                    models.FileField(blank=True, null=True, upload_to="invoices/pdf/"),
                ),
                (
                    "xml_file",
                    models.FileField(blank=True, null=True, upload_to="invoices/xml/"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_invoices",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="billing.currency",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="invoices",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "db_table": "invoice",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("succeeded", "Succeeded"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                            ("partially_refunded", "Partially Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("stripe", "Stripe"),
                            ("bank", "Bank Transfer"),
                            ("paypal", "PayPal"),
                            ("cash", "Cash"),
                            ("other", "Other"),
                        ],
                        default="stripe",
                        max_length=20,
                    ),
                ),
                (
                    "amount_cents",
                    models.BigIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("gateway_txn_id", models.CharField(blank=True, max_length=255)),
                ("reference_number", models.CharField(blank=True, max_length=100)),
                (
                    "received_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("meta", models.JSONField(blank=True, default=dict)),
                ("notes", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="billing.currency",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="payments",
                        to="customers.customer",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to="billing.invoice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "db_table": "payment",
            },
        ),
        migrations.CreateModel(
            name="CreditLedger",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("delta_cents", models.BigIntegerField()),
                ("reason", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_credit_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credit_entries",
                        to="customers.customer",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="billing.invoice",
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="billing.payment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit Entry",
                "verbose_name_plural": "Credit Entries",
                "db_table": "credit_ledger",
            },
        ),
        migrations.CreateModel(
            name="ProformaInvoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number",
                    models.CharField(default="PRO-000", max_length=50, unique=True),
                ),
                ("subtotal_cents", models.BigIntegerField(default=0)),
                ("tax_cents", models.BigIntegerField(default=0)),
                ("total_cents", models.BigIntegerField(default=0)),
                (
                    "valid_until",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Proforma expires after this date",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("meta", models.JSONField(blank=True, default=dict)),
                ("bill_to_name", models.CharField(default="", max_length=255)),
                ("bill_to_tax_id", models.CharField(blank=True, max_length=50)),
                ("bill_to_email", models.EmailField(blank=True, max_length=254)),
                ("bill_to_address1", models.CharField(blank=True, max_length=255)),
                ("bill_to_address2", models.CharField(blank=True, max_length=255)),
                ("bill_to_city", models.CharField(blank=True, max_length=100)),
                ("bill_to_region", models.CharField(blank=True, max_length=100)),
                ("bill_to_postal", models.CharField(blank=True, max_length=20)),
                ("bill_to_country", models.CharField(blank=True, max_length=2)),
                (
                    "pdf_file",
                    models.FileField(blank=True, null=True, upload_to="proformas/pdf/"),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="billing.currency",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="proforma_invoices",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Proforma Invoice",
                "verbose_name_plural": "Proforma Invoices",
                "db_table": "proforma_invoice",
            },
        ),
        migrations.AddField(
            model_name="invoice",
            name="converted_from_proforma",
            field=models.ForeignKey(
                blank=True,
                help_text="Proforma that was converted to this invoice",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="billing.proformainvoice",
            ),
        ),
        migrations.CreateModel(
            name="ProformaLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("service", "Service"),
                            ("setup", "Setup Fee"),
                            ("discount", "Discount"),
                            ("misc", "Miscellaneous"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.CharField(max_length=500)),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3, default=Decimal("1.000"), max_digits=12
                    ),
                ),
                ("unit_price_cents", models.BigIntegerField(default=0)),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.0000"), max_digits=5
                    ),
                ),
                ("line_total_cents", models.BigIntegerField(default=0)),
                (
                    "proforma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="billing.proformainvoice",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="provisioning.service",
                    ),
                ),
            ],
            options={
                "db_table": "proforma_line",
            },
        ),
        migrations.CreateModel(
            name="FXRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rate", models.DecimalField(decimal_places=8, max_digits=18)),
                ("as_of", models.DateField()),
                (
                    "base_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="base_rates",
                        to="billing.currency",
                    ),
                ),
                (
                    "quote_code",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quote_rates",
                        to="billing.currency",
                    ),
                ),
            ],
            options={
                "db_table": "fx_rate",
                "indexes": [
                    models.Index(
                        fields=["base_code", "quote_code", "-as_of"],
                        name="fx_rate_base_co_067654_idx",
                    )
                ],
                "unique_together": {("base_code", "quote_code", "as_of")},
            },
        ),
        migrations.CreateModel(
            name="InvoiceLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("service", "Service"),
                            ("setup", "Setup Fee"),
                            ("credit", "Credit"),
                            ("discount", "Discount"),
                            ("refund", "Refund"),
                            ("misc", "Miscellaneous"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.CharField(max_length=500)),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3, default=Decimal("1.000"), max_digits=12
                    ),
                ),
                ("unit_price_cents", models.BigIntegerField(default=0)),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=4,
                        default=Decimal("0.0000"),
                        help_text="Tax rate as decimal (0.19 for 19%)",
                        max_digits=5,
                    ),
                ),
                ("line_total_cents", models.BigIntegerField(default=0)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="billing.invoice",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related service if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="provisioning.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice Line",
                "verbose_name_plural": "Invoice Lines",
                "db_table": "invoice_line",
                "indexes": [
                    models.Index(
                        fields=["service"], name="invoice_lin_service_6ba9c3_idx"
                    ),
                    models.Index(
                        fields=["invoice", "kind"],
                        name="invoice_lin_invoice_6b7646_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["customer", "-received_at"], name="payment_custome_7d6bc4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["status"], name="payment_status_1c1ab2_idx"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(fields=["method"], name="payment_method_b492a6_idx"),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["gateway_txn_id"], name="payment_gateway_51ee80_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="creditledger",
            index=models.Index(
                fields=["customer", "-created_at"],
                name="credit_ledg_custome_e45542_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="proformainvoice",
            index=models.Index(
                fields=["customer"], name="proforma_in_custome_0be8c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proformainvoice",
            index=models.Index(
                fields=["valid_until"], name="proforma_in_valid_u_415825_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="proformainvoice",
            index=models.Index(
                fields=["created_at"], name="proforma_in_created_bf713d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["customer", "-created_at"], name="invoice_custome_b24946_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                condition=models.Q(("status__in", ["issued", "overdue"])),
                fields=["customer"],
                name="bill_inv_cust_pending",
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["status", "-due_at"], name="invoice_status_3d15ba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(fields=["number"], name="invoice_number_45da71_idx"),
        ),
        migrations.AddIndex(
            model_name="proformaline",
            index=models.Index(
                fields=["service"], name="proforma_li_service_94c383_idx"
            ),
        ),
    ]
