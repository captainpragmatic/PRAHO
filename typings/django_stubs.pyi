"""
Type stubs for Django patterns used in PRAHO Platform
Provides comprehensive type hints for Django ORM patterns
"""

from typing import Any, Generic, TypeVar

from django.contrib.admin import ModelAdmin
from django.db import models
from django.db.models import QuerySet
from django.http import HttpRequest, HttpResponse

T = TypeVar('T', bound=models.Model)

# Enhanced QuerySet type
class TypedQuerySet(QuerySet[T], Generic[T]):
    def filter(self, **kwargs: Any) -> TypedQuerySet[T]: ...
    def exclude(self, **kwargs: Any) -> TypedQuerySet[T]: ...
    def get(self, **kwargs: Any) -> T: ...
    def first(self) -> T | None: ...
    def last(self) -> T | None: ...
    def count(self) -> int: ...
    def exists(self) -> bool: ...
    def order_by(self, *fields: str) -> TypedQuerySet[T]: ...
    def select_related(self, *fields: str | list[str]) -> TypedQuerySet[T]: ...
    def prefetch_related(self, *fields: str | list[str]) -> TypedQuerySet[T]: ...

# Enhanced ModelManager type
class TypedManager(models.Manager[T], Generic[T]):
    def get_queryset(self) -> TypedQuerySet[T]: ...
    def create(self, **kwargs: Any) -> T: ...
    def get_or_create(self, defaults: dict[str, Any] | None = None, **kwargs: Any) -> tuple[T, bool]: ...
    def update_or_create(self, defaults: dict[str, Any] | None = None, **kwargs: Any) -> tuple[T, bool]: ...

# Enhanced ModelAdmin type
class TypedModelAdmin(ModelAdmin[T], Generic[T]):
    model: type[T]
    list_display: list[str]
    list_filter: list[str]
    search_fields: list[str]
    readonly_fields: list[str]
    
    def get_queryset(self, request: HttpRequest) -> TypedQuerySet[T]: ...
    def has_add_permission(self, request: HttpRequest) -> bool: ...
    def has_change_permission(self, request: HttpRequest, obj: T | None = None) -> bool: ...
    def has_delete_permission(self, request: HttpRequest, obj: T | None = None) -> bool: ...

# Request/Response types for Django views
class TypedRequest(HttpRequest):
    user: Any  # Should be your user model type

class TypedResponse(HttpResponse):
    content: str
    status_code: int
