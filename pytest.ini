[pytest]
# ===============================================================================
# ROOT PROJECT PYTEST CONFIGURATION - INTEGRATION & E2E TESTS âœ…
# ===============================================================================
# Django automatically creates test_<database_name> for all tests
# Cross-service integration tests, E2E tests, Docker service tests
# Full database access enabled for comprehensive testing

DJANGO_SETTINGS_MODULE = services.platform.config.settings.dev
python_files = test_*.py *_test.py *_tests.py
python_classes = Test*
python_functions = test_*

# Set Python path for service imports
pythonpath = . services/platform

# Add options - integration test configuration
addopts = 
    --verbose
    --tb=short  
    --strict-markers
    --disable-warnings
    --nomigrations
    --reuse-db
    --cov=services
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html

# Test paths - integration and E2E tests only
testpaths = tests

# Custom markers - cross-service testing
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks cross-service integration tests
    e2e: marks end-to-end tests (full user journeys)
    docker: marks tests requiring Docker services
    security: marks security integration tests
    platform_portal: marks tests verifying platform-portal API communication
    db: marks tests that require database access
    romanian_compliance: marks tests for Romanian regulations
    django_db: marks tests requiring database access (auto-added by pytest-django)

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::django.utils.deprecation.RemovedInDjango50Warning
    ignore::django.utils.deprecation.RemovedInDjango51Warning

# Django specific - automatic test database creation enabled
django_find_project = false